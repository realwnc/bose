<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd   
	http://www.springframework.org/schema/tx   
	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd   
	http://www.springframework.org/schema/context   
	http://www.springframework.org/schema/context/spring-context-4.1.xsd   
	http://www.springframework.org/schema/util    
	http://www.springframework.org/schema/util/spring-util-4.1.xsd   
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.1.xsd 
	http://www.springframework.org/schema/cache    
	http://www.springframework.org/schema/cache/spring-cache.xsd">
	
	<!-- redis config: 
        jedisPoolConfig:数据源, 
        Spring-redis连接池管理工厂, 
        使用中间类解决RedisCache.jedisConnectionFactory的静态注入，从而使MyBatis实现第三方缓存 

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxTotal" value="${redis.maxTotal}" />
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="minIdle" value="${redis.minIdle}" />
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />  
    </bean>
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" destroy-method="destroy">
    	<property name="hostName" value="${redis.ip}" />
		<property name="port" value="${redis.port}" />
        <property name="password" value="${redis.passwd}" />
		<property name="timeout" value="${redis.timeout}" />
		<property name="poolConfig" ref="jedisPoolConfig" />
        <property name="database" value="10" />
    </bean>
    -->
    <!--
    <bean id="redisCacheTransfer" class="com.mids.redis.RedisCacheTransfer">
        <property name="jedisConnectionFactory" ref="jedisConnectionFactory"/>
    </bean>
    -->

    <!-- for com.mids.common.redis.RedisUtilFactory begin -->
     <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxTotal" value="${redis.maxTotal}" />
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="minIdle" value="${redis.minIdle}" />
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />  
    </bean>
    <bean id="redisUtilFactory" class="com.mids.common.redis.RedisUtilFactory" init-method="init" destroy-method="destroy">
        <property name="host" value="${redis.ip}" />
		<property name="port" value="${redis.port}" />
        <property name="password" value="${redis.passwd}" />
		<property name="timeout" value="${redis.timeout}" />
        <property name="database" value="10" />
        <property name="poolConfig" ref="jedisPoolConfig" />
    </bean>
    <!-- for com.mids.common.redis.RedisUtilFactory endxx -->
</beans>
